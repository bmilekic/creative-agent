{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "/schemas/v1/media-buy/get-media-buy-delivery-response.json",
  "title": "Get Media Buy Delivery Response",
  "description": "Response payload for get_media_buy_delivery task",
  "type": "object",
  "properties": {
    "adcp_version": {
      "type": "string",
      "description": "AdCP schema version used for this response",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "notification_type": {
      "type": "string",
      "enum": [
        "scheduled",
        "final",
        "delayed",
        "adjusted"
      ],
      "description": "Type of webhook notification (only present in webhook deliveries): scheduled = regular periodic update, final = campaign completed, delayed = data not yet available, adjusted = resending period with updated data"
    },
    "partial_data": {
      "type": "boolean",
      "description": "Indicates if any media buys in this webhook have missing/delayed data (only present in webhook deliveries)"
    },
    "unavailable_count": {
      "type": "integer",
      "minimum": 0,
      "description": "Number of media buys with reporting_delayed or failed status (only present in webhook deliveries when partial_data is true)"
    },
    "sequence_number": {
      "type": "integer",
      "minimum": 1,
      "description": "Sequential notification number (only present in webhook deliveries, starts at 1)"
    },
    "next_expected_at": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp for next expected notification (only present in webhook deliveries when notification_type is not 'final')"
    },
    "reporting_period": {
      "type": "object",
      "description": "Date range for the report. All periods use UTC timezone.",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 start timestamp in UTC (e.g., 2024-02-05T00:00:00Z)"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 end timestamp in UTC (e.g., 2024-02-05T23:59:59Z)"
        }
      },
      "required": [
        "start",
        "end"
      ],
      "additionalProperties": false
    },
    "currency": {
      "type": "string",
      "description": "ISO 4217 currency code",
      "pattern": "^[A-Z]{3}$"
    },
    "aggregated_totals": {
      "type": "object",
      "description": "Combined metrics across all returned media buys. Only included in API responses (get_media_buy_delivery), not in webhook notifications.",
      "properties": {
        "impressions": {
          "type": "number",
          "description": "Total impressions delivered across all media buys",
          "minimum": 0
        },
        "spend": {
          "type": "number",
          "description": "Total amount spent across all media buys",
          "minimum": 0
        },
        "clicks": {
          "type": "number",
          "description": "Total clicks across all media buys (if applicable)",
          "minimum": 0
        },
        "video_completions": {
          "type": "number",
          "description": "Total video completions across all media buys (if applicable)",
          "minimum": 0
        },
        "media_buy_count": {
          "type": "integer",
          "description": "Number of media buys included in the response",
          "minimum": 0
        }
      },
      "required": [
        "impressions",
        "spend",
        "media_buy_count"
      ],
      "additionalProperties": false
    },
    "media_buy_deliveries": {
      "type": "array",
      "description": "Array of delivery data for media buys. When used in webhook notifications, may contain multiple media buys aggregated by publisher. When used in get_media_buy_delivery API responses, typically contains requested media buys.",
      "items": {
        "type": "object",
        "properties": {
          "media_buy_id": {
            "type": "string",
            "description": "Publisher's media buy identifier"
          },
          "buyer_ref": {
            "type": "string",
            "description": "Buyer's reference identifier for this media buy"
          },
          "status": {
            "type": "string",
            "description": "Current media buy status. In webhook context, reporting_delayed indicates data temporarily unavailable.",
            "enum": [
              "pending",
              "active",
              "paused",
              "completed",
              "failed",
              "reporting_delayed"
            ]
          },
          "message": {
            "type": "string",
            "description": "Human-readable message (typically present when status is reporting_delayed or failed)"
          },
          "expected_availability": {
            "type": "string",
            "format": "date-time",
            "description": "When delayed data is expected to be available (only present when status is reporting_delayed)"
          },
          "is_adjusted": {
            "type": "boolean",
            "description": "Indicates this delivery contains updated data for a previously reported period. Buyer should replace previous period data with these totals."
          },
          "pricing_model": {
            "$ref": "/schemas/v1/enums/pricing-model.json",
            "description": "Pricing model used for this media buy"
          },
          "totals": {
            "allOf": [
              {
                "$ref": "/schemas/v1/core/delivery-metrics.json"
              },
              {
                "type": "object",
                "description": "Aggregate metrics for this media buy across all packages",
                "properties": {
                  "effective_rate": {
                    "type": "number",
                    "description": "Effective rate paid per unit based on pricing_model (e.g., actual CPM for 'cpm', actual cost per completed view for 'cpcv', actual cost per point for 'cpp')",
                    "minimum": 0
                  }
                },
                "required": [
                  "spend"
                ]
              }
            ]
          },
          "by_package": {
            "type": "array",
            "description": "Metrics broken down by package",
            "items": {
              "allOf": [
                {
                  "$ref": "/schemas/v1/core/delivery-metrics.json"
                },
                {
                  "type": "object",
                  "properties": {
                    "package_id": {
                      "type": "string",
                      "description": "Publisher's package identifier"
                    },
                    "buyer_ref": {
                      "type": "string",
                      "description": "Buyer's reference identifier for this package"
                    },
                    "pacing_index": {
                      "type": "number",
                      "description": "Delivery pace (1.0 = on track, <1.0 = behind, >1.0 = ahead)",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "package_id",
                    "spend"
                  ]
                }
              ]
            }
          },
          "daily_breakdown": {
            "type": "array",
            "description": "Day-by-day delivery",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                  "description": "Date (YYYY-MM-DD)"
                },
                "impressions": {
                  "type": "number",
                  "description": "Daily impressions",
                  "minimum": 0
                },
                "spend": {
                  "type": "number",
                  "description": "Daily spend",
                  "minimum": 0
                }
              },
              "required": [
                "date",
                "impressions",
                "spend"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "media_buy_id",
          "status",
          "totals",
          "by_package"
        ],
        "additionalProperties": false
      }
    },
    "errors": {
      "type": "array",
      "description": "Task-specific errors and warnings (e.g., missing delivery data, reporting platform issues)",
      "items": {
        "$ref": "/schemas/v1/core/error.json"
      }
    }
  },
  "required": [
    "adcp_version",
    "reporting_period",
    "currency",
    "media_buy_deliveries"
  ],
  "additionalProperties": false
}
