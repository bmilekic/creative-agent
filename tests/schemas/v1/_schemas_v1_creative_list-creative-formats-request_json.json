{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "/schemas/v1/creative/list-creative-formats-request.json",
  "title": "List Creative Formats Request (Creative Agent)",
  "description": "Request parameters for discovering creative formats provided by this creative agent",
  "type": "object",
  "properties": {
    "format_ids": {
      "type": "array",
      "description": "Return only these specific format IDs",
      "items": {
        "$ref": "/schemas/v1/core/format-id.json"
      }
    },
    "type": {
      "type": "string",
      "description": "Filter by format type (technical categories with distinct requirements)",
      "enum": [
        "audio",
        "video",
        "display",
        "dooh"
      ]
    },
    "asset_types": {
      "type": "array",
      "description": "Filter to formats that include these asset types. For third-party tags, search for 'html' or 'javascript'. E.g., ['image', 'text'] returns formats with images and text, ['javascript'] returns formats accepting JavaScript tags.",
      "items": {
        "type": "string",
        "enum": [
          "image",
          "video",
          "audio",
          "text",
          "html",
          "javascript",
          "url"
        ]
      }
    },
    "max_width": {
      "type": "integer",
      "description": "Maximum width in pixels (inclusive). Returns formats with width <= this value. Omit for responsive/fluid formats."
    },
    "max_height": {
      "type": "integer",
      "description": "Maximum height in pixels (inclusive). Returns formats with height <= this value. Omit for responsive/fluid formats."
    },
    "min_width": {
      "type": "integer",
      "description": "Minimum width in pixels (inclusive). Returns formats with width >= this value."
    },
    "min_height": {
      "type": "integer",
      "description": "Minimum height in pixels (inclusive). Returns formats with height >= this value."
    },
    "is_responsive": {
      "type": "boolean",
      "description": "Filter for responsive formats that adapt to container size. When true, returns formats without fixed dimensions."
    },
    "name_search": {
      "type": "string",
      "description": "Search for formats by name (case-insensitive partial match)"
    }
  },
  "additionalProperties": false
}
