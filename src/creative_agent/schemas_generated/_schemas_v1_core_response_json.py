# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_response_json.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, Optional

from pydantic import BaseModel, ConfigDict, Field


class Status(Enum):
    submitted = "submitted"
    working = "working"
    input_required = "input-required"
    completed = "completed"
    canceled = "canceled"
    failed = "failed"
    rejected = "rejected"
    auth_required = "auth-required"
    unknown = "unknown"


class ProtocolResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    message: Annotated[str, Field(description="Human-readable summary")]
    status: Annotated[
        Optional[Status],
        Field(
            description="Standardized task status values based on A2A TaskState enum. Indicates the current state of any AdCP operation.",
            title="Task Status",
        ),
    ] = None
    context_id: Annotated[
        Optional[str], Field(description="Session continuity identifier")
    ] = None
    data: Annotated[
        Optional[Any],
        Field(
            description="AdCP task-specific response data (see individual task response schemas)"
        ),
    ] = None
