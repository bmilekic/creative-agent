# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_measurement_json.json

from __future__ import annotations

from typing import Annotated, Optional

from pydantic import BaseModel, ConfigDict, Field


class Measurement(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Annotated[
        str,
        Field(
            description="Type of measurement",
            examples=["incremental_sales_lift", "brand_lift", "foot_traffic"],
        ),
    ]
    attribution: Annotated[
        str,
        Field(
            description="Attribution methodology",
            examples=["deterministic_purchase", "probabilistic"],
        ),
    ]
    window: Annotated[
        Optional[str],
        Field(description="Attribution window", examples=["30_days", "7_days"]),
    ] = None
    reporting: Annotated[
        str,
        Field(
            description="Reporting frequency and format",
            examples=["weekly_dashboard", "real_time_api"],
        ),
    ]
