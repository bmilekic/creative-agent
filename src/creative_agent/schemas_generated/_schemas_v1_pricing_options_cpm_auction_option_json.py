# generated by datamodel-codegen:
#   filename:  _schemas_v1_pricing-options_cpm-auction-option_json.json

from __future__ import annotations

from typing import Annotated, Literal, Optional

from pydantic import BaseModel, ConfigDict, Field


class PriceGuidance(BaseModel):
    floor: Annotated[
        float,
        Field(
            description="Minimum bid price - publisher will reject bids under this value",
            ge=0.0,
        ),
    ]
    p25: Annotated[
        Optional[float], Field(description="25th percentile winning price", ge=0.0)
    ] = None
    p50: Annotated[
        Optional[float], Field(description="Median winning price", ge=0.0)
    ] = None
    p75: Annotated[
        Optional[float], Field(description="75th percentile winning price", ge=0.0)
    ] = None
    p90: Annotated[
        Optional[float], Field(description="90th percentile winning price", ge=0.0)
    ] = None


class CpmAuctionPricingOption(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pricing_option_id: Annotated[
        str,
        Field(
            description="Unique identifier for this pricing option within the product (e.g., 'cpm_usd_auction')"
        ),
    ]
    pricing_model: Annotated[
        Literal["cpm"], Field(description="Cost per 1,000 impressions")
    ]
    currency: Annotated[
        str,
        Field(
            description="ISO 4217 currency code",
            examples=["USD", "EUR", "GBP", "JPY"],
            pattern="^[A-Z]{3}$",
        ),
    ]
    price_guidance: Annotated[
        PriceGuidance,
        Field(description="Pricing guidance for auction-based CPM bidding"),
    ]
    min_spend_per_package: Annotated[
        Optional[float],
        Field(
            description="Minimum spend requirement per package using this pricing option, in the specified currency",
            ge=0.0,
        ),
    ] = None
