# generated by datamodel-codegen:
#   filename:  _schemas_v1_signals_activate-signal-response_json.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, Optional

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class Status(Enum):
    pending = "pending"
    processing = "processing"
    deployed = "deployed"
    failed = "failed"


class Error(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Annotated[str, Field(description="Error code for programmatic handling")]
    message: Annotated[str, Field(description="Human-readable error message")]
    field: Annotated[
        Optional[str],
        Field(
            description="Field path associated with the error (e.g., 'packages[0].targeting')"
        ),
    ] = None
    suggestion: Annotated[
        Optional[str], Field(description="Suggested fix for the error")
    ] = None
    retry_after: Annotated[
        Optional[float],
        Field(description="Seconds to wait before retrying the operation", ge=0.0),
    ] = None
    details: Annotated[
        Optional[Any], Field(description="Additional task-specific error details")
    ] = None


class ActivateSignalResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    adcp_version: Annotated[
        str,
        Field(
            description="AdCP schema version used for this response",
            pattern="^\\d+\\.\\d+\\.\\d+$",
        ),
    ]
    task_id: Annotated[
        str, Field(description="Unique identifier for tracking the activation")
    ]
    status: Annotated[Status, Field(description="Current status")]
    decisioning_platform_segment_id: Annotated[
        Optional[str],
        Field(description="The platform-specific ID to use once activated"),
    ] = None
    estimated_activation_duration_minutes: Annotated[
        Optional[float],
        Field(description="Estimated time to complete (optional)", ge=0.0),
    ] = None
    deployed_at: Annotated[
        Optional[AwareDatetime],
        Field(description="Timestamp when activation completed (optional)"),
    ] = None
    errors: Annotated[
        Optional[list[Error]],
        Field(
            description="Task-specific errors and warnings (e.g., activation failures, platform issues)"
        ),
    ] = None
