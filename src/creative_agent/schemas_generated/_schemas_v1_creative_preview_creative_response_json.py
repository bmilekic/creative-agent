# generated by datamodel-codegen:
#   filename:  _schemas_v1_creative_preview-creative-response_json.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, Optional

from pydantic import AnyUrl, AwareDatetime, BaseModel, ConfigDict, Field


class Input(BaseModel):
    name: Annotated[str, Field(description="Human-readable name for this variant")]
    macros: Annotated[
        Optional[dict[str, str]],
        Field(description="Macro values applied to this variant"),
    ] = None
    context_description: Annotated[
        Optional[str], Field(description="Context description applied to this variant")
    ] = None


class PrimaryMediaType(Enum):
    image = "image"
    video = "video"
    audio = "audio"
    interactive = "interactive"


class EstimatedDimensions(BaseModel):
    width: Annotated[float, Field(ge=0.0)]
    height: Annotated[float, Field(ge=0.0)]


class Hints(BaseModel):
    primary_media_type: Annotated[
        Optional[PrimaryMediaType],
        Field(
            description="Primary media type contained in the preview (for optimization only)"
        ),
    ] = None
    estimated_dimensions: Annotated[
        Optional[EstimatedDimensions],
        Field(
            description="Estimated rendered dimensions (may differ from actual responsive rendering)"
        ),
    ] = None
    estimated_duration_seconds: Annotated[
        Optional[float],
        Field(
            description="Estimated duration for video/audio content (for optimization only)",
            ge=0.0,
        ),
    ] = None
    contains_audio: Annotated[
        Optional[bool],
        Field(
            description="Whether the preview contains audio (helps with autoplay policies)"
        ),
    ] = None
    requires_interaction: Annotated[
        Optional[bool],
        Field(
            description="Whether the preview requires user interaction to fully experience"
        ),
    ] = None


class Embedding(BaseModel):
    recommended_sandbox: Annotated[
        Optional[str],
        Field(
            description="Recommended iframe sandbox attribute value (e.g., 'allow-scripts allow-same-origin')"
        ),
    ] = None
    requires_https: Annotated[
        Optional[bool],
        Field(description="Whether the preview requires HTTPS for secure embedding"),
    ] = None
    supports_fullscreen: Annotated[
        Optional[bool],
        Field(description="Whether the preview supports fullscreen mode"),
    ] = None
    csp_policy: Annotated[
        Optional[str],
        Field(description="Content Security Policy requirements for embedding"),
    ] = None


class Preview(BaseModel):
    preview_url: Annotated[
        AnyUrl,
        Field(
            description="URL to an HTML page that renders this preview variant. Can be embedded in an iframe. Handles all rendering complexity internally (images, video players, audio players, interactive content, etc.)."
        ),
    ]
    input: Annotated[
        Input,
        Field(
            description="The input parameters that generated this preview variant. Echoes back the request input or shows defaults used."
        ),
    ]
    hints: Annotated[
        Optional[Hints],
        Field(
            description="Optional optimization hints for clients. Clients MUST support HTML rendering regardless of hints. These enable optimizations like preloading appropriate codecs or sizing iframes."
        ),
    ] = None
    embedding: Annotated[
        Optional[Embedding],
        Field(
            description="Optional security and embedding metadata for safe iframe integration"
        ),
    ] = None


class PreviewCreativeResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    previews: Annotated[
        list[Preview],
        Field(
            description="Array of preview variants. Each preview corresponds to an input set from the request. If no inputs were provided, returns a single default preview.",
            min_length=1,
        ),
    ]
    interactive_url: Annotated[
        Optional[AnyUrl],
        Field(
            description="Optional URL to an interactive testing page that shows all preview variants with controls to switch between them, modify macro values, and test different scenarios."
        ),
    ] = None
    expires_at: Annotated[
        AwareDatetime, Field(description="ISO 8601 timestamp when preview links expire")
    ]
