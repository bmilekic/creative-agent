# generated by datamodel-codegen:
#   filename:  _schemas_v1_media-buy_update-media-buy-response_json.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, Optional

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class Status(Enum):
    submitted = "submitted"
    working = "working"
    input_required = "input-required"
    completed = "completed"
    canceled = "canceled"
    failed = "failed"
    rejected = "rejected"
    auth_required = "auth-required"
    unknown = "unknown"


class AffectedPackage(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    package_id: Annotated[str, Field(description="Publisher's package identifier")]
    buyer_ref: Annotated[str, Field(description="Buyer's reference for the package")]


class Error(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Annotated[str, Field(description="Error code for programmatic handling")]
    message: Annotated[str, Field(description="Human-readable error message")]
    field: Annotated[
        Optional[str],
        Field(
            description="Field path associated with the error (e.g., 'packages[0].targeting')"
        ),
    ] = None
    suggestion: Annotated[
        Optional[str], Field(description="Suggested fix for the error")
    ] = None
    retry_after: Annotated[
        Optional[float],
        Field(description="Seconds to wait before retrying the operation", ge=0.0),
    ] = None
    details: Annotated[
        Optional[Any], Field(description="Additional task-specific error details")
    ] = None


class UpdateMediaBuyResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    adcp_version: Annotated[
        str,
        Field(
            description="AdCP schema version used for this response",
            pattern="^\\d+\\.\\d+\\.\\d+$",
        ),
    ]
    status: Annotated[
        Status,
        Field(
            description="Standardized task status values based on A2A TaskState enum. Indicates the current state of any AdCP operation.",
            title="Task Status",
        ),
    ]
    task_id: Annotated[
        Optional[str],
        Field(
            description="Unique identifier for tracking this async operation (present for submitted/working status)"
        ),
    ] = None
    media_buy_id: Annotated[
        str, Field(description="Publisher's identifier for the media buy")
    ]
    buyer_ref: Annotated[
        str, Field(description="Buyer's reference identifier for the media buy")
    ]
    implementation_date: Annotated[
        Optional[AwareDatetime],
        Field(
            description="ISO 8601 timestamp when changes take effect (null if pending approval)"
        ),
    ] = None
    affected_packages: Annotated[
        Optional[list[AffectedPackage]],
        Field(description="Array of packages that were modified"),
    ] = None
    errors: Annotated[
        Optional[list[Error]],
        Field(
            description="Task-specific errors and warnings (e.g., partial update failures)"
        ),
    ] = None
