# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_assets_vast-asset_json.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, Literal, Optional, Union

from pydantic import AnyUrl, BaseModel, ConfigDict, Field, RootModel


class VastVersion(Enum):
    field_2_0 = "2.0"
    field_3_0 = "3.0"
    field_4_0 = "4.0"
    field_4_1 = "4.1"
    field_4_2 = "4.2"


class TrackingEvent(Enum):
    start = "start"
    first_quartile = "firstQuartile"
    midpoint = "midpoint"
    third_quartile = "thirdQuartile"
    complete = "complete"
    impression = "impression"
    click = "click"
    pause = "pause"
    resume = "resume"
    skip = "skip"
    mute = "mute"
    unmute = "unmute"
    fullscreen = "fullscreen"
    exit_fullscreen = "exitFullscreen"
    player_expand = "playerExpand"
    player_collapse = "playerCollapse"


class VastAsset1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    asset_type: Literal["vast"]
    url: Annotated[AnyUrl, Field(description="URL endpoint that returns VAST XML")]
    content: Annotated[Optional[str], Field(description="Inline VAST XML content")] = (
        None
    )
    vast_version: Annotated[
        Optional[VastVersion], Field(description="VAST specification version")
    ] = None
    vpaid_enabled: Annotated[
        Optional[bool],
        Field(
            description="Whether VPAID (Video Player-Ad Interface Definition) is supported"
        ),
    ] = None
    max_wrapper_depth: Annotated[
        Optional[int],
        Field(description="Maximum allowed wrapper/redirect depth", ge=0, le=10),
    ] = None
    duration_ms: Annotated[
        Optional[int],
        Field(description="Expected video duration in milliseconds (if known)", ge=0),
    ] = None
    tracking_events: Annotated[
        Optional[list[TrackingEvent]],
        Field(description="Tracking events supported by this VAST tag"),
    ] = None


class VastAsset2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    asset_type: Literal["vast"]
    url: Annotated[
        Optional[AnyUrl], Field(description="URL endpoint that returns VAST XML")
    ] = None
    content: Annotated[str, Field(description="Inline VAST XML content")]
    vast_version: Annotated[
        Optional[VastVersion], Field(description="VAST specification version")
    ] = None
    vpaid_enabled: Annotated[
        Optional[bool],
        Field(
            description="Whether VPAID (Video Player-Ad Interface Definition) is supported"
        ),
    ] = None
    max_wrapper_depth: Annotated[
        Optional[int],
        Field(description="Maximum allowed wrapper/redirect depth", ge=0, le=10),
    ] = None
    duration_ms: Annotated[
        Optional[int],
        Field(description="Expected video duration in milliseconds (if known)", ge=0),
    ] = None
    tracking_events: Annotated[
        Optional[list[TrackingEvent]],
        Field(description="Tracking events supported by this VAST tag"),
    ] = None


class VastAsset(RootModel[Union[VastAsset1, VastAsset2]]):
    root: Annotated[
        Union[VastAsset1, VastAsset2],
        Field(
            description="VAST (Video Ad Serving Template) tag for third-party video ad serving",
            title="VAST Asset",
        ),
    ]
